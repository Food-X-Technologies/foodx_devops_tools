image: python:3.8-slim

stages:
  - setup
  - static-analysis
  - tests
  - package
  - publish

variables:
  FLIT_ROOT_INSTALL: 1

  PYPI_API_USER: __token__

  # Don't forget to update the coverage threshold in .pre-commit-config.yaml
  UNITTEST_COVERAGE_THRESHOLD: 90

  VENV_BIN: .venv/bin

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip
    - .venv/


.build-harness-base:
  artifacts:
    expire_in: 1 week
    paths:
      - dist/
  before_script:
    - 'apt-get update
    && apt-get install -y
         git'
    - git config --global user.email "you@example.com"
    - git config --global user.name "Your Name"


.build-harness-target:
  script:
    - ${VENV_BIN}/flit install -s
    - '${VENV_BIN}/build-harness ${TARGET}'

  extends:
    - .build-harness-base


install-dependencies:
  stage: setup
  script:
    - python3 -m venv .venv
    - ${VENV_BIN}/pip install build_harness
    - ${VENV_BIN}/build-harness install

  extends:
    - .build-harness-base


formatting-check:
  stage: static-analysis
  variables:
    TARGET: formatting --check

  extends:
    - .build-harness-target


all-check:
  stage: static-analysis
  variables:
    TARGET: static-analysis

  extends:
    - .build-harness-target


flake8-check:
  stage: static-analysis
  variables:
    TARGET: static-analysis --analysis flake8

  extends:
    - .build-harness-target


mypy-check:
  stage: static-analysis
  variables:
    TARGET: static-analysis --analysis mypy

  extends:
    - .build-harness-target


pydocstyle-check:
  stage: static-analysis
  variables:
    TARGET: static-analysis --analysis pydocstyle

  extends:
    - .build-harness-target


unit-tests:
  stage: tests
  variables:
    TARGET: unit-test

  extends:
    - .build-harness-target


acceptance-tests:
  stage: tests
  variables:
    TARGET: acceptance tests --junitxml

  extends:
    - .build-harness-target


acceptance-tags:
  stage: tests
  variables:
    TARGET: acceptance tags

  extends:
    - .build-harness-target


unit-tests-coverage:
  stage: tests
  variables:
    TARGET: unit-test --check ${UNITTEST_COVERAGE_THRESHOLD}

  extends:
    - .build-harness-target


install-check:
  stage: tests
  variables:
    TARGET: install

  extends:
    - .build-harness-target


build-packages:
  stage: package
  script:
    - export THIS_VERSION=$(${VENV_BIN}/release-flow)
    # log THIS_VERSION to pipeline log for debugging
    - echo ${THIS_VERSION}
    - ${VENV_BIN}/build-harness package --release-id ${THIS_VERSION}

  extends:
    - .build-harness-base


publish-release-packages:
  needs:
    - job: build-packages
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^(\d+\.)*\d+$/'
  stage: publish
  variables:
    TARGET: publish --user $PYPI_API_USER --password $PYPI_API_TOKEN

  extends:
    - .build-harness-target


publish-release-dryrun:
  needs:
    - job: build-packages
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /(\+dryrun\d*)$/'
  stage: publish
  variables:
    TARGET: publish --user $PYPI_API_USER --password $PYPI_API_TOKEN --dryrun

  extends:
    - .build-harness-target


publish-nonrelease-packages:
  needs:
    - job: build-packages
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG !~ /(\+dryrun\d*)$/ &&
           $CI_COMMIT_TAG !~ /^(\d+\.)*\d+$/'
  stage: publish

  script:
    - ls dist/

  extends:
    - .build-harness-base
